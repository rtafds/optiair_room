/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      refineMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Cells to refine; name of cell set
set refineCell1;
// celSetで選択した領域の名前

// Type of coordinate system:
// - global : coordinate system same for every cell. Usually aligned with
//   x,y,z axis. Specify in globalCoeffs section below.
// - patchLocal : coordinate system different for every cell. Specify in
//   patchLocalCoeffs section below.
coordinateSystem global;
// メッシュを再分割する方向。解析領域全体で同じ方向を使用

// .. and its coefficients. x,y in this case. (normal direction is calculated
// as tan1^tan2)
// x軸、y軸の方向ベクトル。両ベクトルの外積がz軸方向になる
globalCoeffs
{
    tan1 (1 0 0);
    tan2 (0 1 0);
    tan3 (0 0 1);
}

patchLocalCoeffs
{
    patch patchName; //Normal direction is facenormal of zero'th face of patch
    tan1 (1 0 0);
    tan2 (0 1 0);
    tan3 (0 0 1);
}

// List of directions to refine
// globalsCoeffsで指定した方向ベクトルのうち、再分割する方向の指定。x,y,z軸方向ともに再分割する
directions
(
    tan1
    tan2
    normal
);

// Whether to use hex topology. This will
// - if patchLocal: all cells on selected patch should be hex
// - split all hexes in 2x2x2 through the middle of edges.
// 六面体セルを各方向2分割する。本ケースも該当するのでtrue
useHexTopology  false;

// Cut purely geometric (will cut hexes through vertices) or take topology
// into account. Incompatible with useHexTopology
geometricCut    true;

// Write meshes from intermediate steps
// 再分割処理中の途中結果を保存するか。不要なのでFALSE
writeMesh       false;

// ************************************************************************* //
